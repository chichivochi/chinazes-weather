import os
import logging
import requests
from datetime import time
from zoneinfo import ZoneInfo
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

# –ë–µ—Ä—ë–º —Ç–æ–∫–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
WEATHER_KEY = os.getenv("OPENWEATHER_API_KEY")

# –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –∏ –≤—Ä–µ–º—è –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
TZ = ZoneInfo("Europe/Prague")
SEND_HOUR = 9  # –≤–æ —Å–∫–æ–ª—å–∫–æ —É—Ç—Ä–∞ —Å–ª–∞—Ç—å –∞–≤—Ç–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã
def get_weather(city: str) -> str:
    url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_KEY}&units=metric&lang=ru"
    resp = requests.get(url).json()
    if resp.get("cod") != 200:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É üò¢"
    return (
        f"üå§ –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {resp['name']}:\n"
        f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {resp['main']['temp']}¬∞C\n"
        f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {resp['main']['feels_like']}¬∞C\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ: {resp['weather'][0]['description'].capitalize()}"
    )

# –ö–æ–º–∞–Ω–¥—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /weather <–≥–æ—Ä–æ–¥> –∏–ª–∏ /now üòâ")

async def weather(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("–ù–∞–ø–∏—à–∏ –≥–æ—Ä–æ–¥, –Ω–∞–ø—Ä–∏–º–µ—Ä: /weather Praha")
        return
    city = " ".join(context.args)
    await update.message.reply_text(get_weather(city))

async def now(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(get_weather("Praha"))

# –ê–≤—Ç–æ-–æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
async def send_daily(context: ContextTypes.DEFAULT_TYPE):
    chat_id = os.getenv("CHAT_ID")
    if chat_id:
        await context.bot.send_message(chat_id=chat_id, text=get_weather("Praha"))

def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("weather", weather))
    app.add_handler(CommandHandler("now", now))

    # –µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞
    app.job_queue.run_daily(send_daily, time(hour=SEND_HOUR, minute=0, tzinfo=TZ))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ‚úÖ")
    app.run_polling()

if __name__ == "__main__":
    main()
